class Solution {
  public:
    // Function to find the number of islands.
    void helper(int n , int m , int i , int j , vector<vector<char>> &grid , vector<vector<int>> &vis )
    {
      
        
        if( i < 0 || i >= n || j < 0 || j >= m )
            return ;
            
        if( grid[i][j] == '0' || vis[i][j] )
            return ;
            
        if( grid[i][j] == '1' )
            vis[i][j] = 1 ;
        
        
        helper(n,m,i-1,j-1,grid,vis);
        helper(n,m,i-1,j,grid,vis);
        helper(n,m,i-1,j+1,grid,vis);
        helper(n,m,i,j-1,grid,vis);
        helper(n,m,i,j+1,grid,vis);
        helper(n,m,i+1,j-1,grid,vis);
        helper(n,m,i+1,j,grid,vis);
        helper(n,m,i+1,j+1,grid,vis);
        
    }
    int numIslands(vector<vector<char>>& grid) {
        
        int n = grid.size() ;
        int m = grid[0].size();
        int count = 0 ;
        vector<vector<int>> vis(n,vector<int> (m,0));
        
        for( int i = 0 ; i < n ; i++)
        {
            for( int j = 0 ; j < m ; j++)
            {
                if( grid[i][j] == '1' && !vis[i][j]  )
                {
                    helper(n,m,i,j,grid,vis);
                    count++;
                }
            }
        }
        return count ;
    }
};
