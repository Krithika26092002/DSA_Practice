// User function Template for C++

class Solution{
public:

    int solve(int index, int W, int val[], int wt[], vector<vector<int>> &dp){
        // if(index == 0){
        //     if(wt[0] <= W){
        //         return val[0];
        //     }
        //     else{
        //         return 0;
        //     }
        // }
        if (index < 0) {
        return 0;
    }
        
        if(dp[index][W]!=-1){
            return dp[index][W];
        }
        
        int include = 0;
        if(wt[index]<=W){
            include = val[index] + solve(index,W-wt[index],val,wt,dp);
        }
        
        int exclude = solve(index -1 ,W,val,wt,dp);
        dp[index][W] = max(include,exclude);
        return dp[index][W];
    }
    
    int knapSack(int N, int W, int val[], int wt[])
    {
        vector<vector<int>> dp(N,vector<int>(W+1,-1));
        int ans = solve(N-1,W,val,wt,dp);
        return ans;
    }
};
