/*
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

// return the Kth largest element in the given BST rooted at 'root'
class Solution
{
    public:
    void inOrder(Node* root,vector<int> &ans){
        if(root==NULL) return ;
        inOrder(root->left,ans);
        ans.push_back(root->data);
        inOrder(root->right,ans);
    }
    
    int kthLargest(Node *root, int K)
    {
        //Your code goes here
        vector<int> ans;
        inOrder(root,ans);
        sort(ans.begin(),ans.end());
        int size=ans.size();
        return ans[size-K];
    }
};
